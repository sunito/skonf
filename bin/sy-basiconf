#!/bin/bash

# Diese "echo"s sind nur für die Syntax-Erkennung von kate
echo
echo
echo "Los gehts..."
echo
echo

own_folder=$(dirname $(readlink -f $0))


function syve_section {
  echo
  echo $*
  echo
  logger syve_section $*
}

has_apt=$(which apt-get)

function apt_install {
  echo
  echo Installing $*
  logger SyveInstalling $*
  if [ $has_apt ] ;then
    sudo apt-get --yes install $*
  else
    sudo zypper -n install $*
  fi  
}

source $(dirname $own_folder)/lib/sy-common.bash  || echo "Fehler beim Laden! folder=$own_folder"


echo "starting..............."

if [ ! -f /usr/bin/kreadconfig ] ;then
  echo symlink to kreadconfig
  sudo ln -s /usr/bin/kreadconfig5 /usr/bin/kreadconfig
  echo symlink to kwriteconfig
  sudo ln -s /usr/bin/kwriteconfig5 /usr/bin/kwriteconfig
fi


syve_section "Gruppenzugehörigkeit und Rechte"

our_umask=002
# Umask auf 002 setzen
echo "Aktuelle Default-UMASK:"
grep ^UMASK /etc/login.defs
sudo sed -ri "s/^(UMASK\s+).+$/\1$our_umask/" /etc/login.defs
# Nachschauen, ob Umask auch 002 ist.
echo "Neue Default-UMASK:"
grep ^UMASK /etc/login.defs

# 2017-Okt,Sv: mei Manjaro ist anscheinen das nötig:
sudo sed -ri "s/^(umask\s+).+$/\1$our_umask/" /etc/profile

# echter Test, ob es wirkt:
if [ ] ;then su $USER -c umask ;fi

# Die Hauptgruppe für normale User sollte users sein, damit die Benutzer untereinander
# leichter Daten austauschen können.
# Der folgende Befehl setzt die primäre Gruppe des aktuellen Users:
sudo usermod -g users $USER
# Erfolg kann überprüft werden, indem in einer neuen Login-Shell geschaut wird, ob die Gruppe users an erster Stelle genannt wird:
if [ ] ;then su $USER -c groups ;fi

# die Gruppen syslog, scanner und dialout werden bei Ubuntu nicht per Default gesetzt, hier setzten wir gleich alle, die wir brauchen (alles in einer Zeile):
#for group in sudo adm syslog plugdev lpadmin scanner cdrom sambashare dialout dip vboxusers ;do sudo addgroup $USER $group ;done
#for group in sudo adm syslog systemd-journal plugdev lpadmin cdrom dialout vboxusers ;do sudo usermod -a -G $group $USER ;done
# for Manjaro: cups sys lp
for group in sudo adm syslog systemd-journal plugdev lpadmin cdrom dialout vboxusers cups sys audio lp ;do sudo usermod -a -G $group $USER ;done
# deaktiviert: dip scanner sambashare 

dat_partition=`df |grep dat |cut -d" " -f1`
echo dat: $dat_partition
if [ -z `sudo tune2fs -l $dat_partition |grep volume |cut -d":" -f2 |tr -d ' '` ] ;then
  sudo tune2fs -L DAT $dat_partition
fi


syve_section "Mehr Kofort in der grafischen Konsole"
# unlimited history 
konsole_profile_dir=$HOME/.local/share/konsole
if ! [[ -d $konsole_profile_dir ]] ;then
  konsole_profile_dir=$kde_dir/share/apps/konsole
fi
#if ! [[ -d $konsole_profile_dir ]] ;then
#  mkdir "$konsole_profile_dir"
#fi
# Es könnten mehrere Profile da sein, wir nehmen einfach das neueste:
last_profile=$(ls -tr "$konsole_profile_dir"/*.profile |tail -1)
echo "last konsole profile: $last_profile"
distri_id=$(lsb_release -i |cut -d: -f2 |xargs)
if [[ -z "$last_profile" ]] ;then
  if [[ $distri_id == LinuxMint ]] ;then  # small hack
    last_profile=${distri_id}.profile
  else
    last_profile=Shell.profile
  fi
fi
konsole_profile_file="$konsole_profile_dir/$(basename $last_profile)"
kwrit econfig --file "$konsole_profile_file" --group General   --key Name $(basename $last_profile .profile)
#kwriteconfig --file "$konsole_profile_dir/Shell.profile" --group General   --key Parent FALLBACK/
kwriteconfig --file "$konsole_profile_file" --group Scrolling --key HistoryMode 2

old_parent=$(kreadconfig --file "$konsole_profile_file" --group General   --key Parent --default FALLBACK/)
kwriteconfig --file "$konsole_profile_file" --group General   --key Parent "$old_parent"


syve_section "Einfachklick"

kwriteconfig --file $kde_dir/share/config/kdeglobals --group KDE --key SingleClick true

syve_section "Logitech-Trackball-Unterstützung"

sudo mkdir /opt/syve
sudo mkdir /opt/syve/bin
cat <<eot |sudo tee /opt/syve/bin/trackball-scroll.bash
# Generiert `date` von syve
# http://blog.karssen.org/2010/09/11/linux-the-logitech-trackman-marble-and-emulating-a-scroll-wheel/
# http://www.robmeerman.co.uk/unix/xinput#enabling_emulation_ubuntu_1004

# 1. Mausrad-Rollfunktion durch Drücken des kleinen Buttons über der linken Maustaste beim Rollen: 
xinput set-int-prop "Logitech USB Trackball" "Evdev Wheel Emulation Button" 8 8 
xinput set-int-prop "Logitech USB Trackball" "Evdev Wheel Emulation" 8 1 
xinput set-prop "Logitech USB Trackball" "Evdev Wheel Emulation Axes" 6 7 4 5

# 2. Mittelklick:
xinput set-int-prop "Logitech USB Trackball" "Evdev Middle Button Emulation" 8 1
eot
sudo chmod a+x /opt/syve/bin/trackball-scroll.bash

# Und das immer noch für jeden User extra (weil ich nicht extra testen wollte, ob es in rc.local zu früh wäre):

cat >~/.config/autostart/trackball-scroll.bash.desktop <<eot
[Desktop Entry]
Exec=sleep 37 ;/opt/syve/bin/trackball-scroll.bash
GenericName=
Icon=bball
Name=Scrollen und Mittelklick beim Trackball
Path=
StartupNotify=true
Terminal=false
Type=Application
X-KDE-SubstituteUID=false
eot

syve_section "Netzwerk"

# Wir brauchen NFS
apt_install nfs-kernel-server 

apt_install nmap 
apt_install ssh 
sudo systemctl enable sshd.service
sudo service sshd start

apt_install curl

# Exportieren der Dat-Partition:
apt_install nfs-kernel-server # (falls nicht oben schon erledigt)
if [[ -z `grep "/dat" /etc/exports` ]] ;then
  echo '/dat *(rw,sync,no_subtree_check)'|sudo tee -a /etc/exports
else
  echo "/dat war schon in /etc/exports"
fi
if [[ -z `grep -E "^/home" /etc/exports` ]] ;then
  echo '/home *(rw,sync,no_subtree_check)'|sudo tee -a /etc/exports
else
  echo "/home war schon in /etc/exports"
fi
echo
echo #TODO# SUSE: Interface zu Firewall hinzu und den NFS-Dienst erlauben!!
echo
# reicht das?
sudo systemctl enable nfs-server
sudo service nfs-server start


apt_install bridge-utils



syve_section "Windows File systems"
apt_install exfat-utils


# "NTFS workaround"

# 2016-Jul, Sven: taken from http://askubuntu.com/questions/86086/fsck-cant-find-fsck-ntfs
if [[ ! -e  /sbin/fsck.ntfs ]] ;then
  ntfsfix_path=`which ntfsfix`
  sudo ln -s $ntfsfix_path  /sbin/fsck.ntfs
else
  echo "fsck.ntfs existiert bereits"
fi

syve_section "Drucken unter Majaro"
# 2019-Jun, war nötig für Canon-Drucker:
apt_install manjaro-printer

syve_section "Wichtige Programme installieren"

# Für die Rechtschreibprüfung in Libreoffice:
apt_install hunspell-de-de # ubuntu
apt_install myspell-de_DE  # opensuse

# already installed:
#apt_install procps
# Sound auf Konsole
apt_install beep
apt_install sox 
apt_install jovie

# Manjaro: AUR-Tool
apt_install base-devel 
#apt_install yaourt
apt_install pacaur

# <2020Jul> evtl Probleme, falls kein KDE installiert --> evtl zu sy-kdeconf verschieben:
apt_install kdialog # bei Manjaro komischerweise nicht installiert

# Wichtige graphische Tools

if [[ -z `zypper lr |grep "dmacvicar"` ]] ;then
  sudo zypper addrepo http://download.opensuse.org/repositories/home:/dmacvicar/openSUSE_Leap_`lsb_release -rs`/ dmacvicar_qdirstat
  sudo zypper refresh
fi

#apt_install k4dirstat  <-- buggy (2019-März,Sv)
apt_install qdirstat
apt_install kdirstat

apt_install kate

syve_section "Kommunikation"

apt_install linphone

if [ -z `ls /etc/apt/sources.list.d |grep savoirfairelinux`  ] # genauer Eintrag: savoirfairelinux-ppa-trusty.list
then  
  # 2013-10-24, Sven: Problem bei Saucy, aber sollte inzwischen wieder gehen
  sudo add-apt-repository --yes ppa:savoirfairelinux
  # 2014-03-30, nightly jetzt hoffentlich nicht mehr nötig:
  #sudo add-apt-repository ppa:savoirfairelinux/sflphone-nightly
  sudo apt-get update >/dev/null
fi

# doch nicht #veraltet:
apt_install twinkle
#pacaur -S  --noconfirm twinkle-qt5
pacaur -S   twinkle-qt5

apt_install empathy-call telepathy-sofiasip # beide Pakete sind zum Telefonieren erforderlich

# Damit der CDDN.Dialog in K3B funktioniert
apt_install kde-config-cddb


syve_section "grub default"

if [[ -z `dmesg | grep -i "Hardware name: Acer"` ]] ;then
  echo "This is not an Acer-Computer"
else
  echo "Acer-Computer, workaround for vrightness control"
  if [[ -z `grep acpi_backlight=vendor /etc/default/grub` ]] ;then
    sudo sed -i -r -e 's/^(GRUB_CMDLINE_LINUX_DEFAULT *)=("?)([^"]*)("?)$/\1=\2\3 acpi_osi=Linux acpi_backlight=vendor\4/' /etc/default/grub
  fi
fi

echo -n old: 
grep GRUB_TIMEOUT /etc/default/grub
sudo sed -ri "s/^(GRUB_TIMEOUT\s*)=.+$/\1=2/" /etc/default/grub
echo -n new: 
grep GRUB_TIMEOUT /etc/default/grub
sudo update-grub2


fernw_sym_path=$HOME/.local/share/applications/fernwartung.desktop
if ! [[ -f $fernw_sym_path ]] ;then
mkdir -p $(dirname $fernw_sym_path)
cat <<eot >$fernw_sym_path
[Desktop Entry]
Comment=
Exec=konsole -p LocalTabTitleFormat=Fernwartung -e bash $skonf_pfad/f1wartung
Icon=strigi
Name=fernwartung
NoDisplay=false
Path[$e]=
StartupNotify=true
Terminal=0
Type=Application
X-KDE-SubstituteUID=false
eot
fi

syve_section "Sonstiges"

apt_install apt-transport-https


syve_section "teamviewer"

echo TODO
if false ;then
  wget https://download.teamviewer.com/download/teamviewer_i386.deb
  sudo dpkg -i teamviewer_i386.deb
  sudo apt-get install -f
else
  wget https://downloadus2.teamviewer.com/download/version_12x/teamviewer_12.0.76279.i686.rpm
fi

syve_section "Workaround für fehlenden klipper-Start in Linux Mint 17.3"

klipperstart_file=/opt/syve/bin/klipper_start.bash
cat <<eot |sudo tee $klipperstart_file
# Generiert `date` von syve
klipper
eot
sudo chmod a+x $klipperstart_file

cat >~/.config/autostart/klipper_start.desktop <<eot
[Desktop Entry]
Exec=$klipperstart_file
Icon=
Name=Klipper starten
Path=
StartupNotify=true
Terminal=false
Type=Application
X-KDE-SubstituteUID=false
eot



syve_section "Ruby für Qt"

# Svens Apps, dafür Ruby mit KDE-Bindings installieren:
apt_install ruby-dev #debian
apt_install ruby-devel #suse
apt_install korundum4  # 2013-Aug: Funktioniert nicht mehr für Ruby 1.9, also
apt_install g++
apt_install libqt4-dev
apt_install libqt4-opengl-dev            # würde vielleicht das obige Paket (libqt4-dev) eh mitziehen
apt_install cmake   # für Compilieren von qtbindings gebraucht
#sudo apt-get --yes install cmake                       # wahrscheinlich auch schon in libqt4-dev enthalten

if [ -z "`gem list |grep qtbindings`" ] ;then
sudo gem install qtbindings 
fi
sudo gem install slop
gem install slop -v 3.5

if [[ ! -z `dpkg -l 'akonadi*'| grep "ii  akona"` ]] ;then
  # Nur wenn schon akonadi installiert
  apt_install akonadiconsole
fi

sudo apt-get dist-upgrade 

exit 0




###############################################################################
# Die folgenden Änderungen müssten noch in Script-Stücke umgewandelt werden:

# <ActionProperties scheme="Default">
#  <Action shortcut="Del; Backspace" name="akonadi_move_to_trash"/>
# </ActionProperties>
#</kpartgui>
# 
# diff -r /dat/conf-dot/.kde/share/config/plasma-desktop-appletsrc /home/sunito/.kde/share/config/plasma-desktop-appletsrc
# 140a141,143
# > [Containments][2][Applets][112][Configuration][General]
# > show_suspend=true
# 
# 
# diff -r /dat/conf-dot/.kde/share/config/powerdevilrc /home/sunito/.kde/share/config/powerdevilrc
# 3a4,6
# > [General]
# > configLockScreen=false
# > 
# diff -r /dat/conf-dot/.kde/share/config/dolphinrc /home/sunito/.kde/share/config/dolphinrc
# 27a28
# > HomeUrl=file:///111
# 
# 
# 
# 20:50:14 sunito@NetZen:~$ grep -A 20 sven2013 /111/ye-sys/kmail-neu/emailidentities
# Bcc=sven2013@suska.org
# Dictionary=Deutsch
# Drafts=544
# Email Address=sven2013@suska.org
# Email Aliases=
# Fcc=554
# Identity=7 Sven (2013)
# Image Location=
# Inline Signature=
# Name=Sven Suska
# Preferred Crypto Message Format=auto
# Signature Enabled=true
# Signature File[]=/home/sunito/.mail-signaturen/mailsig-std.txt
# Signature Type=file
# Templates=617
# VCardFile=
# X-FaceEnabled=false
# uoid=1282982449
# 
# 
# diff -r /dat/conf-dot/.kde/share/config/ksmserverrc /home/sunito/.kde/share/config/ksmserverrc
# 2a3
# > 
# 3a5,6
# > confirmLogout=true
# > excludeApps=
# 4a8,9
# > offerShutdown=true
# > shutdownType=2
# 
# [$Version]
# update_info=ksmserver.upd:kde3
# 
# [General]
# confirmLogout=true
# excludeApps=
# loginMode=default
# offerShutdown=true
# shutdownType=2
# 
# 
# diff -r /dat/conf-dot/.kde/share/config/kscreensaverrc /home/sunito/.kde/share/config/kscreensaverrc
# 2,3c2,3
# < Enabled=true
# < LegacySaverEnabled=true
# ---
# > Enabled=false
# > LegacySaverEnabled=false
# 6c6
# < PlasmaEnabled=false
# ---
# > PlasmaEnabled=true
# 8c8
# < Timeout=60
# ---
# > Timeout=300
# 
# kmail Filter anwenden:
#   <ActionList name="toolbar_messagetag_actions"/>
#   <Action name="create_todo"/>
#   <Action name="apply_filters"/>
#  </ToolBar>
# in /home/sunito/.kde/share/apps/kmail2/kmmainwin.rc
# diff -r /dat/conf-dot/.config/synaptiks/management.json /home/sunito/.config/synaptiks/management.json
# 5c5
# <   "monitor_keyboard": false, 
# ---
# >   "monitor_keyboard": true, 
# 
# 
# diff -r /dat/conf-dot/.kde/share/config/plasma-desktop-appletsrc /home/sunito/.kde/share/config/plasma-desktop-appletsrc
# 229,230c229,230
# < maxRecentApps=5
# < views=RecentlyUsedApplications,Applications,RunCommand,Leave
# ---
# > maxRecentApps=8
# > views=RecentlyUsedApplications,Applications,Favorites,RecentlyUsed,RunCommand,Leave
# 
