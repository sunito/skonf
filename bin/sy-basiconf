#!/bin/bash

# Diese "echo"s sind nur für die Syntax-Erkennung von kate
echo
echo
echo "Los gehts..."
echo
echo

own_folder=$(dirname $(readlink -f $0))


function syve_section {
  echo
  echo $*
  echo
  logger syve_section $*
}

has_apt=$(which apt-get)

function apt_install {
  echo
  echo Installing $*
  logger SyveInstalling $*
  if [ $has_apt ] ;then
    sudo apt-get --yes install $*
  else
    sudo zypper -n install $*
  fi  
}

source $(dirname $own_folder)/lib/sy-common.bash  || echo "Fehler beim Laden! folder=$own_folder"


echo "starting..............."

syve_section "Erste Schritte"
# Wir brauchen NFS und Ruby:
apt_install nfs-kernel-server 
apt_install ruby


syve_section "Gruppenzugehörigkeit und Rechte"

# Umask auf 002 setzen
echo "Aktuelle Default-UMASK:"
grep ^UMASK /etc/login.defs
sudo sed -ri "s/^(UMASK\s+).+$/\1002/" /etc/login.defs
# Nachschauen, ob Umask auch 002 ist.
echo "Neue Default-UMASK:"
grep ^UMASK /etc/login.defs
# echter Test, ob es wirkt:
if [ ] ;then su $USER -c umask ;fi

# Die Hauptgruppe für normale User sollte users sein, damit die Benutzer untereinander
# leichter Daten austauschen können.
# Der folgende Befehl setzt die primäre Gruppe des aktuellen Users:
sudo usermod -g users $USER
# Erfolg kann überprüft werden, indem in einer neuen Login-Shell geschaut wird, ob die Gruppe users an erster Stelle genannt wird:
if [ ] ;then su $USER -c groups ;fi

# die Gruppen syslog, scanner und dialout werden bei Ubuntu nicht per Default gesetzt, hier setzten wir gleich alle, die wir brauchen (alles in einer Zeile):
#for group in sudo adm syslog plugdev lpadmin scanner cdrom sambashare dialout dip vboxusers ;do sudo addgroup $USER $group ;done
for group in sudo adm syslog plugdev lpadmin scanner cdrom sambashare dialout dip vboxusers ;do sudo usermod -a -G $group $USER ;done

dat_partition=`df |grep dat |cut -d" " -f1`
if [ -z `sudo tune2fs -l /dev/sda6 |grep volume |cut -d":" -f2 |tr -d ' '` ] ;then
  sudo tune2fs -L DAT $dat_patition
fi

syve_section "Mehr Komfort in der Shell"

# .bashrc erweitert (Uhrzeit + History wird sofort und mit Ausführungszeit gespeichert und die Kapazität erhöht)
if [[ -z `grep "truncate -s-" $HOME/.bashrc` ]] ;then cat >>~/.bashrc <<"EOT"

# Sven: Zeit im Prompt:
PS1="\t "$PS1
 
# Sven: History wird hiermit sofort nach jedem Kommando und mit Zeitstempel gespeichert, doppelte Zeitstempel werden verhindert:
shopt -s histappend
export PROMPT_COMMAND='history -a; truncate -s-`tail -1 $HOME/.bash_history|ruby -ne "print 1+(\\$_.slice(/([ \t]*# *[-\d\t: ]{0,19})+/).size rescue 0)"` $HOME/.bash_history; date +" %t%t# %F %X" >>$HOME/.bash_history'
# einfache Variante: export PROMPT_COMMAND='history -a; truncate -s-1 $HOME/.bash_history; date +" %t%t# %F %X" >>$HOME/.bash_history'
export HISTSIZE=9999
export HISTFILESIZE=22000
EOT
else
echo "History-Sofortspeicherung wurde schon zu .bashrc hingefügt"
fi

if [[ -z `grep "syver/binolder" $HOME/.bashrc` ]] ;then cat >>~/.bashrc <<"EOT"

# Sven: syver mit im $PATH
PATH=$PATH:$HOME/bin/syver/bin
PATH=$PATH:$HOME/bin/syver/binolder
EOT
else
  echo "'bin/syver/bin' schon zum $PATH hingefügt"
fi

if ! [[ -f ~/.alias ]] ;then
  ln -s ~/.bash_aliases ~/.alias
fi

apt_install screen

if false ;then
 ./.local/share/konsole/Shell.profile
[General]
Name=Shell
Parent=FALLBACK/

[Scrolling]
HistoryMode=2
fi

syve_section "Netzwerk"


apt_install nmap ssh curl
# Exportieren der Dat-Partition:
apt_install nfs-kernel-server # (falls nicht oben schon erledigt)
if [[ -z `grep "/dat" /etc/exports` ]] ;then
  echo '/dat *(rw,sync,no_subtree_check)'|sudo tee -a /etc/exports
else
  echo "/dat war schon in /etc/exports"
fi
if [[ -z `grep -E "^/home" /etc/exports` ]] ;then
  echo '/home *(rw,sync,no_subtree_check)'|sudo tee -a /etc/exports
else
  echo "/home war schon in /etc/exports"
fi

apt_install bridge-utils



syve_section "Wichtige Programme installieren"

# Für die Rechtschreibprüfung in Libreoffice:
apt_install hunspell-de-de

# Entwicklung
apt_install git vim

# Konsole
apt_install mmv
# already installed:
#apt_install procps
# Sound auf Konsole
apt_install beep sox jovie

# Wichtige graphische Tools
apt_install k4dirstat

# Virtuelle Umgebungen
if [[ -z `dpkg -l virtua*| grep "ii  virt"` ]] ;then
  apt_install virtualbox
fi

syve_section "Kommunikation"

apt_install linphone

if [ -z `ls /etc/apt/sources.list.d |grep savoirfairelinux`  ] # genauer Eintrag: savoirfairelinux-ppa-trusty.list
then  
  # 2013-10-24, Sven: Problem bei Saucy, aber sollte inzwischen wieder gehen
  sudo add-apt-repository --yes ppa:savoirfairelinux
  # 2014-03-30, nightly jetzt hoffentlich nicht mehr nötig:
  #sudo add-apt-repository ppa:savoirfairelinux/sflphone-nightly
  sudo apt-get update >/dev/null
fi
apt_install sflphone-gnome sflphone-kde

#veraltet:
#sudo apt-get --yes install twinkle pidgin
apt_install empathy-call telepathy-sofiasip # beide Pakete sind zum Telefonieren erforderlich

# Damit der CDDN.Dialog in K3B funktioniert
apt_install kde-config-cddb


syve_section "grub default"

if [[ -z `dmesg | grep -i "Hardware name: Acer"` ]] ;then
  echo "This is not an Acer-Computer"
else
  echo "Acer-Computer, workaround for vrightness control"
  if [[ -z `grep acpi_backlight=vendor /etc/default/grub` ]] ;then
    sudo sed -i -r -e 's/^(GRUB_CMDLINE_LINUX_DEFAULT *)=("?)([^"]*)("?)$/\1=\2\3 acpi_osi=Linux acpi_backlight=vendor\4/' /etc/default/grub
  fi
fi

echo -n old: 
grep GRUB_TIMEOUT /etc/default/grub
sudo sed -ri "s/^(GRUB_TIMEOUT\s*)=.+$/\1=2/" /etc/default/grub
echo -n new: 
grep GRUB_TIMEOUT /etc/default/grub
sudo update-grub2


fernw_sym_path=$HOME/.local/share/applications/fernwartung.desktop
if ! [[ -f $fernw_sym_path ]] ;then
cat <<eot >$fernw_sym_path
[Desktop Entry]
Comment=
Exec=konsole -e bash ~/bin/syver/bin/f1wartung
Icon=strigi
Name=fernwartung
NoDisplay=false
Path[$e]=
StartupNotify=true
Terminal=0
Type=Application
X-KDE-SubstituteUID=false
eot
fi


syve_section "Ruby für Qt"

# Svens Apps, dafür Ruby mit KDE-Bindings installieren:
apt_install ruby-dev
apt_install korundum4  # 2013-Aug: Funktioniert nicht mehr für Ruby 1.9, also
apt_install g++
apt_install libqt4-dev
apt_install libqt4-opengl-dev            # würde vielleicht das obige Paket (libqt4-dev) eh mitziehen
apt_install cmake   # für Compilieren von qtbindings gebraucht
#sudo apt-get --yes install cmake                       # wahrscheinlich auch schon in libqt4-dev enthalten

if [ -z "`gem list |grep qtbindings`" ] ;then
sudo gem install qtbindings 
fi
sudo gem install slop

apt_install akonadiconsole

sudo apt-get dist-upgrade 

exit 0

###############################################################################
# Die folgenden Änderungen müssten noch in Script-Stücke umgewandelt werden:

# <ActionProperties scheme="Default">
#  <Action shortcut="Del; Backspace" name="akonadi_move_to_trash"/>
# </ActionProperties>
#</kpartgui>

diff -r /dat/conf-dot/.kde/share/config/plasma-desktop-appletsrc /home/sunito/.kde/share/config/plasma-desktop-appletsrc
140a141,143
> [Containments][2][Applets][112][Configuration][General]
> show_suspend=true
> 

diff -r /dat/conf-dot/.kde/share/config/powerdevilrc /home/sunito/.kde/share/config/powerdevilrc
3a4,6
> [General]
> configLockScreen=false
> 
diff -r /dat/conf-dot/.kde/share/config/dolphinrc /home/sunito/.kde/share/config/dolphinrc
27a28
> HomeUrl=file:///111



20:50:14 sunito@NetZen:~$ grep -A 20 sven2013 /111/ye-sys/kmail-neu/emailidentities
Bcc=sven2013@suska.org
Dictionary=Deutsch
Drafts=544
Email Address=sven2013@suska.org
Email Aliases=
Fcc=554
Identity=7 Sven (2013)
Image Location=
Inline Signature=
Name=Sven Suska
Preferred Crypto Message Format=auto
Signature Enabled=true
Signature File[]=/home/sunito/.mail-signaturen/mailsig-std.txt
Signature Type=file
Templates=617
VCardFile=
X-FaceEnabled=false
uoid=1282982449


diff -r /dat/conf-dot/.kde/share/config/ksmserverrc /home/sunito/.kde/share/config/ksmserverrc
2a3
> 
3a5,6
> confirmLogout=true
> excludeApps=
4a8,9
> offerShutdown=true
> shutdownType=2

[$Version]
update_info=ksmserver.upd:kde3

[General]
confirmLogout=true
excludeApps=
loginMode=default
offerShutdown=true
shutdownType=2


diff -r /dat/conf-dot/.kde/share/config/kscreensaverrc /home/sunito/.kde/share/config/kscreensaverrc
2,3c2,3
< Enabled=true
< LegacySaverEnabled=true
---
> Enabled=false
> LegacySaverEnabled=false
6c6
< PlasmaEnabled=false
---
> PlasmaEnabled=true
8c8
< Timeout=60
---
> Timeout=300

kmail Filter anwenden:
  <ActionList name="toolbar_messagetag_actions"/>
  <Action name="create_todo"/>
  <Action name="apply_filters"/>
 </ToolBar>
in /home/sunito/.kde/share/apps/kmail2/kmmainwin.rc
diff -r /dat/conf-dot/.config/synaptiks/management.json /home/sunito/.config/synaptiks/management.json
5c5
<   "monitor_keyboard": false, 
---
>   "monitor_keyboard": true, 


diff -r /dat/conf-dot/.kde/share/config/plasma-desktop-appletsrc /home/sunito/.kde/share/config/plasma-desktop-appletsrc
229,230c229,230
< maxRecentApps=5
< views=RecentlyUsedApplications,Applications,RunCommand,Leave
---
> maxRecentApps=8
> views=RecentlyUsedApplications,Applications,Favorites,RecentlyUsed,RunCommand,Leave

