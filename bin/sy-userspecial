#!/bin/bash

own_folder=$(dirname $(readlink -f $0))


source $(dirname $own_folder)/lib/sy-common.bash


syve_section "assistent"

if [ $USER = "assistent" ] ;then
  syve_section "Mounten von /haupt"
  if [[ -z `grep "/haupt" $HOME/.profile ` ]] ;then
    cat <<eot >>$HOME/.profile 

# Sven, `date`
mount /haupt
eot
  else
    echo "mount /haupt war schon in .profile"
  fi
  if [[ -z `grep "/haupt" /etc/fstab ` ]] ;then
    cat <<eot |sudo tee -a /etc/fstab

# Sven, `date` 
IP_Adresse:/dat                               /haupt          nfs     intr,users,noauto 0       0
eot
    sudo mkdir /haupt
  fi
  
  ruby <<eoc
    menu_entries = []
    Dir["$HOME/.wine/drive_c/Programme/WISO/*/wiso2*.exe"].each do |exe_path|
      basename = File.basename(exe_path, ".exe")
      jahr = basename.scan(/\d\d\d\d/).first
      desktop_filename = "$HOME/.local/share/applications/#{basename}.desktop"
      File.open(desktop_filename, "w") do |f|
        f.puts <<eot
[Desktop Entry]
Exec=wine "#{exe_path}"
GenericName=Steuerprogramm #{jahr}
Name=#{basename}
Icon=#{File.dirname(exe_path)}/wisoakt.ico
NoDisplay=false
StartupNotify=true
Terminal=0
Type=Application
eot
      end
      menu_entries << <<eot
 <Menu>
  <Name>Steuerprogramm #{jahr}</Name>
  <Layout>
   <Merge type="files"/>
   <Filename>#{desktop_filename}</Filename>
  </Layout>
  <NotDeleted/>
  <Include>
   <Filename>#{desktop_filename}</Filename>
  </Include>
 </Menu>
eot
    end # Dir["$HOME/.wine/drive_c/Programme/WISO/*/wiso2*.exe"]
    File.open("$HOME/.config/menus/wiso_steuer_autogen.menu", "w") do |f|   
      f.puts "<Menu>"
      f.puts menu_entries.join("\n")
      f.puts "</Menu>"
    end    
eoc
fi # if [ $USER = "assistent" ]

syve_section Pfade

if [[ -z `grep /dat /etc/fstab` ]] ;then
  dat_dir=/home
  sudo mkdir /dat
else
  dat_dir=/dat
fi
if [ ${USER: -4} = "gast" ] ;then
  dat_dir=/home
fi
sudo chown $USER.users /dat
sudo chown $USER.users $dat_dir

CAP_USER=`ruby -e'print ENV["USER"].capitalize'`
user_fullname=`grep $USER /etc/passwd |cut -d: -f5 |cut -d, -f1`

if [ $USER = "sunito" ] ;then
  user_dat_dir=$dat_dir/aaa
elif [ $USER = "NEW" ] ;then
  user_dat_dir=$dat_dir/N.E.W.-Daten
elif [ $USER = "martin" ] ;then
  user_dat_dir=$dat_dir/MartinsDaten
elif [ $USER = "assistent" ] ;then
  user_dat_dir=$HOME
elif [ $USER = "gerhard" ] ;then
  user_dat_dir=$HOME/Gerhard
elif [ $USER = "brunhild" ] ;then
  user_dat_dir=$dat_dir/B
  rm $HOME/B
  ln -s $user_dat_dir $HOME/B
elif [ ${USER:0:3} = "han" ] ;then
  user_dat_dir=$dat_dir/Eigene
else
  if [ $dat_dir == /home ] ;then
    user_dat_dir=$HOME
  else
    user_dat_dir=$dat_dir/$CAP_USER
  fi
fi

#if [ $USER = "gerhard" ] ;then
#  if [ $dat_dir == /home ] ;then
#    user_dat_dir=$user_dat_dir/Daten
#  fi  
#fi
echo "making $user_dat_dir"
mkdir $user_dat_dir

desktop_dir=$user_dat_dir/Desktop
documents_dir=$user_dat_dir/Dokumente
download_dir=$user_dat_dir/Downloads
music_dir=$user_dat_dir/Musik
pictures_dir=$user_dat_dir/Bilder
videos_dir=$user_dat_dir/Videos

if [ $USER = "sunito" ] ;then
  documents_dir=$user_dat_dir/111
  desktop_dir=$documents_dir
  download_dir=$user_dat_dir/177/Downloads
  music_dir=$user_dat_dir/477/MusikAusmNetz
  pictures_dir=$user_dat_dir/533/Fotos
  videos_dir=$pictures_dir
elif [ $USER = "NEW" ] ;then
  user_arch_dir=$dat_dir/n.e.w.-zzArchiv
  documents_dir=$user_dat_dir/Geschriebseltes
  download_dir=$user_arch_dir/Downloads
  videos_dir=$user_dat_dir/1videos
  pictures_dir=$user_dat_dir/"fotoos"
  
  ln -s $user_dat_dir $HOME
  
  mkdir $download_dir

  rm $user_dat_dir/"$(basename "$download_dir")"
  ln -s $download_dir $user_dat_dir
elif [ $USER = "assistent" ] ;then
  documents_dir=/111/Business
  #ln -s /111/Business  $HOME/   # <-- hineinverlinken, also wird zu $documents_dir
  #echo ">>>> ln -s /111/Business $HOME/"
  echo "ln -s $documents_dir/Buchhalt/WisoSteuer $HOME/Steuer-Sparbuch"
  ln -s $documents_dir/Buchhalt/WisoSteuer $HOME/Steuer-Sparbuch  
  desktop_dir=$documents_dir
  download_dir=$HOME/Downloads
  if [ -d $HOME/Desktop ] ;then
    mv $HOME/Desktop $HOME/Desktop_orig
  fi
  ln -s $desktop_dir $HOME/Desktop
  ln -s $downloads_dir $documents_dir/
elif [ $USER = "gerhard" ] ;then
  desktop_dir=$user_dat_dir
  documents_dir=$user_dat_dir
  music_dir="$user_dat_dir/05 Musik"
  pictures_dir="$user_dat_dir/06 Fotos"
  videos_dir="$user_dat_dir/06 Videos"
elif [ $USER = "brunhild" ] ;then
  if [ ! -d $download_dir ] ;then
    ln -s $documents_dir $download_dir
  fi
elif [ ${USER: -4} = "gast" ] ;then
  user_dat_dir=$documents_dir
  
  desktop_dir=$documents_dir
  download_dir=$documents_dir
  music_dir=$documents_dir
  pictures_dir=$documents_dir
  videos_dir=$documents_dir
fi

rmdir -v $HOME/*

if [ $USER = "brunhild" ] ;then
  for ud in ${u_dirs[*]} ;do
    ln -s "$ud" "$HOME"
  done
  rm "$user_dat_dir/Eigene Musik"
  rm -r "$user_dat_dir/Eigene Musik"
  ln -s $music_dir     "$user_dat_dir/Eigene Musik"
  rm "$user_dat_dir/Eigene Bilder"
  rm -r "$user_dat_dir/Eigene Bilder"
  ln -s $pictures_dir  "$user_dat_dir/Eigene Bilder"
elif [ $USER = "sabine" ] ;then
  documents_dir=$user_dat_dir/DokumenteSabine
elif [ $USER = "maria" ] ;then
  documents_dir=$user_dat_dir/Geschriebenes
elif [ $USER = "martin" ] ;then
  desktop_dir=$documents_dir
elif [ ${USER:0:3} = "han" ] ;then
  documents_dir=$user_dat_dir/$CAP_USER
  if [[ $USER = "hans" ]] ;then
  download_dir=$user_dat_dir/Downloads--Allgemein
  else
    download_dir=$user_dat_dir/Zwischenspeicher
  fi
  mkdir $download_dir
  pictures_dir=$user_dat_dir/Fotos
  videos_dir=$pictures_dir
  desktop_dir=$HOME/Desktop
  rm $desktop_dir # falls es ein Link war
  mkdir $desktop_dir
  for ud in "$user_dat_dir/Hans" "$user_dat_dir/Hanna" "$documents_dir" "$pictures_dir" "$download_dir" ;do
    if [[ "$ud" != "$desktop_dir" ]] ;then
      ln -s "$ud" "$desktop_dir"/
    fi
  done
  if [[ $USER = "hanna" ]] ;then
    ln -s "$pictures_dir" "$documents_dir"
  fi
fi

u_dirs=( "$desktop_dir" "$documents_dir" "$download_dir" "$music_dir" "$pictures_dir" "$videos_dir" )

cat <<EOT >$HOME/.config/user-dirs.dirs
XDG_DESKTOP_DIR="$desktop_dir"
XDG_DOCUMENTS_DIR="$documents_dir"
XDG_DOWNLOAD_DIR="$download_dir"
XDG_MUSIC_DIR="$music_dir"
XDG_PICTURES_DIR="$pictures_dir"
XDG_VIDEOS_DIR="$videos_dir"
EOT

for userdir in ${u_dirs[*]} ;do
  rm $userdir
  mkdir $userdir
done

for userdir in "$user_dat_dir" "$download_dir" "$desktop_dir" "$documents_dir";do  # $documents_dir muss als LETZTES kommen!
  link_in_homedir="$HOME/$(basename $userdir)"
  rm "$link_in_homedir"
  if [[ "$userdir" != "$link_in_homedir" ]] ;then
    ln -s "$userdir" "$link_in_homedir"
  fi
  
  documents_link_in_homedir="$link_in_homedir" # funktioniert, weil $documents_dir im letzten Schleifendurchlauf kommt
done

dolphin_dir=$user_dat_dir
case ${USER:0:3} in
  sun|han|ass)
    dolphin_dir=$documents_dir ;;
  *) 
    echo dolphin_dir unchanged ;;
esac

# 2016-Apr, Sven: der zweite Ordner (~/.config) istr der neuere (Plasma 5)
for dolph_conf_dir in "$kde_dir/share/config" "$HOME/.config" ;do
#  kwriteconfig --file "$dolph_conf_dir/dolphinrc" --group "General" --key "HomeUrl" "file://$dolphin_dir"
  kwriteconfig --file "$dolph_conf_dir/dolphinrc" --group "General" --key "HomeUrl" "$dolphin_dir"
done
# kwriteconfig --file $kde_dir/share/config/dolphinrc --group "General"  --key "HomeUrl" "file:///111"
#---  diff -r /dat/conf-dot/.kde/share/config/dolphinrc /home/sunito/.kde/share/config/dolphinrc
#---  27a28
#---  > HomeUrl=file:///111



# 2018-Aug-28: Sven: Handst√§nde, um den Libreoffice-Arbeitspfad ("My Documents") zu setzen (anscheinend kann man ihn nur relativ zu $(home) oder $(work) angeben:
documents_link_ohne_home="${documents_link_in_homedir/\/home\/$USER/}"
echo "################"
echo $documents_link_ohne_home
echo "############"
# eigentlich: <item oor:path=\"/org.openoffice.Office.Paths/Paths/org.openoffice.Office.Paths:NamedPath['Work']"><prop oor:name=\"WritePath\" oor:op=\"fuse\"><value>'
#anf_xml='<item oor:path=\"/org.openoffice.Office.Paths/Paths/org.openoffice.Office.Paths:NamedPath['"'Work'"']"><prop oor:name=\"WritePath\" oor:op=\"fuse\"><value>'
#end_xml="</value></prop></item>"

sed -i -r "s#(Paths:NamedPath\['Work'\].?>\s*<prop[^<]+<value>).*(</value></prop></item>)#\1\$(home)$documents_link_ohne_home\2#"    $HOME/.config/libreoffice/4/user/registrymodifications.xcu

winepref=${WINEPREFIX=$HOME/.wine}

if [ ! -z $winepref ] ;then
  base="$winepref/drive_c/users/$USER"
  rm   "$base/Documents"
  ln -s $documents_dir "$base/Documents"
  rm "$base/Meine Dokumente"
  ln -s $documents_dir "$base/Meine Dokumente"
  rm   "$base/Desktop"
  ln -s $desktop_dir   "$base/Desktop"
  rm   "$base/Eigene Musik"
  ln -s $music_dir     "$base/Eigene Musik"
  rm   "$base/Eigene Bilder"
  ln -s $pictures_dir  "$base/Eigene Bilder"
  rm   "$base/Eigene Videos"
  ln -s $videos_dir    "$base/Eigene Videos"
fi

if [ ! $USER = "assistent" ] ;then
syve_section "Medien-Server"

if [ -z `ls /etc/apt/sources.list.d |grep readymedia` ]
then
  sudo add-apt-repository --yes ppa:ali-asad-lotia/readymedia-latest
  #sudo add-apt-repository --yes ppa:pneu/readymedia-transcode
  sudo apt-get update  >/dev/null  
fi
#minidlna_service=minidlnatc
#minidlna_exe=minidlnatc
minidlna_service=minidlna
minidlna_exe=minidlnad
if [ -z "`dpkg -l minidlna 2>/dev/null`" ] ;then
  #apt_install readymedia-transcode
  apt_install minidlna 
fi

sudo service $minidlna_service stop
sudo update-rc.d $minidlna_service disable

mkdir $HOME/.minidlna
mkdir $HOME/.minidlna/cache
friendly_name="Computer von $CAP_USER"
if [ $USER = "hans" ] ;then
  friendly_name="vom Computer in der Spielstube"
fi
if [ $USER = "hanna" ] ;then
  friendly_name="vom Foto-Computer"
fi
cat <<EOT >$HOME/.minidlna/minidlna.conf
# Use A, P, and V to restrict media 'type' in directory
#media_dir=A,$music_dir
#media_dir=P,$pictures_dir
#media_dir=V,$videos_dir
media_dir=$music_dir
media_dir=$pictures_dir
EOT
if [ ! $pictures_dir = $videos_dir ] ;then
cat <<EOT >>$HOME/.minidlna/minidlna.conf
media_dir=$videos_dir
EOT
fi
cat <<EOT >>$HOME/.minidlna/minidlna.conf
# unexplicable "parsing error":
#listening_ip="192.168.0.1/24"              #Todo: Generate Dynamically!!!
friendly_name=$friendly_name
inotify=yes                     # 'no' for less resources, restart required for new media
db_dir=/home/$USER/.minidlna/cache
log_dir=/home/$USER/.minidlna  
EOT

mkdir $HOME/.config/autostart/
cat <<EOT >$HOME/.config/autostart/minidlna-slowstart.desktop
[Desktop Entry]
Encoding=UTF-8
Type=Application
Name=MiniDLNA
Comment=Server to stream media over network
Exec=sleep 77 ;$minidlna_exe -f $HOME/.minidlna/minidlna.conf -P $HOME/.minidlna/minidlna.pid
StartupNotify=false
Terminal=false
Hidden=false
EOT

mkdir -p $kde_dir/share/apps/plasma_applet_paste
paste_snippets_file=$kde_dir/share/apps/plasma_applet_paste/snippets.xml
syve_section "Einf√ºge-Applet"
if [ -f $paste_snippets_file ] ;then
  echo "'$paste_snippets_file' existierte schon"
else
  if [ $USER = "sunito" ] ;then
    cat <<eot >$paste_snippets_file
<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE text_snippets><snippets>
  <snippet icon="office-calendar" name="Aktuelles Datum">%{date()}</snippet>
  <snippet icon="edit-paste" name="E-Mail f√ºr Finanzamt ()"></snippet>
  <snippet icon="edit-paste" name="Steuer-Nr ()"></snippet>
  <snippet icon="edit-paste" name="USt-Id-Nr ()"></snippet>
  <snippet icon="object-unlocked" name="Zuf√§lliges Passwort">%{password(8)}</snippet>
  <snippet icon="edit-paste" name="Eigener Name">$user_fullname</snippet>
</snippets>
eot
  else
    cat <<eot >$paste_snippets_file
<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE text_snippets><snippets>
  <snippet icon="office-calendar" name="Aktuelles Datum">%{date()}</snippet>
  <snippet icon="object-unlocked" name="Zuf√§lliges Passwort">%{password(8)}</snippet>
  <snippet icon="edit-paste" name="Eigener Name">$user_fullname</snippet>
</snippets>
eot
  fi
fi

# evtl noch f√ºr weitere Nutzer einschr√§nken (kein "ja2 --> kein Autologin
if [ `ruby -e 'puts  (/^(NEW|brunhild|sabine|maria|julian)$/ =~ (ENV["USER"])  ) ? "" : "ja"' ` ] ;then
  sudo sed -i -r -e 's/^(DISPLAYMANAGER_AUTOLOGIN)=.*$/\1="'$USER'"/' /etc/sysconfig/displaymanager
else # also nicht: hans|hanna|
  sudo sed -i -r -e 's/^(DISPLAYMANAGER_AUTOLOGIN)=.*$/\1="''"/' /etc/sysconfig/displaymanager
fi


ruby $(dirname $own_folder)/lib/sy-userspec.rb


syve_section "Ger√§te-Aktionen"


if [ $USER = "brunhild" ] ;then
ruby <<EOC
  PREFIX="/org/workrave"
  def dconf_write rel_path, value
    puts "Setting " + rel_path
    print "old: "; system "dconf read #{PREFIX}/#{rel_path}"
    cmd = "dconf write #{PREFIX}/#{rel_path} #{value}"
    #puts cmd
    system cmd
    print "new: "; system "dconf read #{PREFIX}/#{rel_path}"
  end
  new_settings = {
    "micro-pause" => [7200,  10],
    "rest-break"  => [10800, 300],
    "daily-limit" => [21600]
  }
  new_settings.each do |name, values|
    limit, duration = values
    dconf_write "timers/" + name + "/limit", limit
    dconf_write "timers/" + name + "/auto-reset", duration if duration
    dconf_write "gui/breaks/" + name + "/skippable-break", "false"
  end
  dconf_write "gui/applet/enabled", "false"
  dconf_write "gui/main-window/enabled", "false"
EOC
fi

if [ $USER = "NEW" ] ;then
# Dieser Ort ($kde_dir/share/apps/solid) ist voll veraltet!
mkdir -p $kde_dir/share/apps/solid/actions
user_media_dir=/media/$USER
# quoting "EOT" does not work, because we need $dat_dir inside, so escaped the backticks
cat <<EOT >$kde_dir/share/apps/solid/actions/Comp-NachHandykarte.desktop
[Desktop Action open]
Exec=if fehler=\`rsync -a --delete $dat_dir/N.E.W.-Daten/HandyKarte/ $user_media_dir/*/ 2>&1\`; then kdialog --msgbox "Kopieren und L√∂schen auf Handykarte erfolgreich"; else kdialog --msgbox "Fehler beim Synchronisieren Computer --> Karte \\n\\nFehlermeldung:   \\n$fehler"; fi
Icon=kverbos
Name=VonComp-NachHandykarte

[Desktop Entry]
Actions=open;
Type=Service
X-KDE-Action-Custom=true
X-KDE-Solid-Predicate=[StorageVolume.usage == 'FileSystem' AND StorageVolume.ignored == false]
EOT

# quoting "EOT" does not work, because we need $dat_dir inside, so escaped the backticks
cat <<EOT >$kde_dir/share/apps/solid/actions/VonHandykarte-AufComputer.desktop
[Desktop Action open]
Exec=if fehler=\`rsync -au $user_media_dir/*/ $dat_dir/N.E.W.-Daten/HandyKarte/ 2>&1\`; then kdialog --msgbox "Alle Daten der Karte sind jetzt auf dem Computer. \\n(Auf Computer nichts gel√∂scht)"; else kdialog --msgbox "Fehler beim Synchronisieren Karte --> Computer  \\n\\nFehlermeldung:   \\n$fehler"; fi
Icon=preferences-plugin-script
Name=VonHandykarte-AufComputer

[Desktop Entry]
Actions=open;
Type=Service
X-KDE-Action-Custom=true
X-KDE-Solid-Predicate=[StorageVolume.usage == 'FileSystem' AND StorageVolume.ignored == 'false']
EOT
fi # if [ $USER = "NEW" ] ;then

if [ `ruby -e 'puts  (/^(hans|hanna|sunito|NEW|sabine|maria|julian)$/ =~ (ENV["USER"])  ) ? "ja" : ""' ` ] ;then
  echo "erstelle FotoTrans-Action"
user_media_dir=/media/$USER
# quoting "EOT" does not work, because we need $dat_dir inside, so escaped the backticks
mkdir -p $HOME/.local/share/solid/actions
cat <<EOT >$HOME/.local/share/solid/actions/FotoTransfer.desktop
[Desktop Action open]
Exec=/wartung/skonf/bin/fototrialog.rb
Icon=folder-photos
Name=FotoTransfer (... von SD-Karte auf Computer)

[Desktop Entry]
Actions=open;
Type=Service
X-KDE-Action-Custom=true
X-KDE-Solid-Predicate=[ StorageVolume.usage == 'FileSystem' AND StorageVolume.ignored == false ]
EOT
fi # if [ $USER = "hans" ] ;then



if [ $USER = "sunito" ] ;then
cat >$HOME/.config/autostart/transmission-slowstart.desktop <<EOT
[Desktop Entry]
Exec=sleep 304 ;transmission-qt
Name=QTransmission-Starten
StartupNotify=true
Terminal=false
Type=Application
EOT
fi
fi # nicht "assistent"


syve_section "Software"

# Fast alle haben HP-Drucker, eventuell nach User differnzieren
apt_install hplip   


syve_section "Lernprogramme"


if [ $USER = "NEW" ] ;then
  sudo dpkg -i $download_dir/WorldOfGooDemo.1.41.deb 

# This would screw Netrunner, TODO: install valuable parts of it!!
#apt_install edubuntu-desktop
# Now some useful parts of edubuntu:
  apt_install kgeography
  apt_install kalgebra
  apt_install klettres kstars ktuberling kturtle kwordquiz
  apt_install kbruch khangman kmplot kalzium kanagram      
  apt_install cantor chemtool einstein

fi # if [ $USER = "NEW" ] ;then


apt_install ktouch

if false ;then
#Feb25 01:47:34 hanna@arbeitsrechner:~> diff ./.config/libreoffice/4-suse/user/registrymodifications.xcu ./.config/libreoffice/4-suse/user/registrymodifications.xcu_h225a_homedir
#3c3
#< <item oor:path="/org.openoffice.Office.Paths/Paths/org.openoffice.Office.Paths:NamedPath['Work']"><prop oor:name="WritePath" oor:op="fuse"><value>file:///dat/Eigene</value></prop></item>
echo ---
#> <item oor:path="/org.openoffice.Office.Paths/Paths/org.openoffice.Office.Paths:NamedPath['Work']"><prop oor:name="WritePath" oor:op="fuse"><value>file:///dat/Eigene/Hanna</value></prop></item>
#76c76
fi
