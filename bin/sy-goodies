#!/bin/bash

own_folder=$(dirname $(readlink -f $0))
source $(dirname $own_folder)/lib/sy-common.bash

syve_section "Telefonie"

apt_install skype

cat <<EOT >$HOME/.config/autostart/phone-slowstart.desktop
[Desktop Entry]
Exec=sleep 11;linphone
Icon=system-run
Name[de]=Telefon-Slowstart
Name=Telefon-Slowstart
StartupNotify=true
Terminal=false
Type=Application
EOT


syve_section "Multimedia-Programme"

apt_install libdvdread4
sudo /usr/share/doc/libdvdread4/install-css.sh

apt_install libavcodec-extra-53 # wird fÃ¼r Video-Konvertierung zu MP3 gebraucht
apt_install vlc
apt_install pavucontrol
apt_install audacity


# if [ -z `ls /etc/apt/sources.list.d |grep ps3mediaserver` ]
# then  
#   sudo add-apt-repository --yes ppa:happy-neko/ps3mediaserver
#   # Hack von: http://adam.pohorecki.pl/blog/2014/05/16/how-to-install-ps3-media-server-on-ubuntu-14-dot-04-trusty-tahr/
#   sudo sed -i s/trusty/raring/ /etc/apt/sources.list.d/happy-neko-ps3mediaserver-trusty.list
#   sudo apt-get update >/dev/null  
# fi
# apt_install ps3mediaserver

#syve_section "### simplescreenrecorder" deaktiviert, da Netrunner schon gut ausgestattet
# sudo add-apt-repository ppa:maarten-baert/simplescreenrecorder
# sudo apt-get update >/dev/null
# apt_install simplescreenrecorder

syve_section "Weitere Software installieren"

echo "Ensure that mtools_skip_check=1 is in .mtoolsrc"
if [[ ! -f $HOME/.mtoolsr && -z `grep mtools_skip_check=1 $HOME/.mtoolsrc`  ]] ;then
  echo mtools_skip_check=1 >> $HOME/.mtoolsrc 
fi

apt_install wine winetricks

apt_install cups-pdf
apt_install scribus

if [ -z `ls /etc/apt/sources.list.d |grep retroshare` ]
then  
  sudo add-apt-repository --yes ppa:csoler-users/retroshare
  sudo apt-get update >/dev/null  
fi
apt_install retroshare


apt_install workrave
cat <<EOT >$HOME/.config/autostart/workrave-slowstart.desktop
[Desktop Entry]
Exec=sleep 51;workrave
Icon=system-run
Name=Workrave-Slowstart
StartupNotify=true
Terminal=false
Type=Application
EOT
ruby <<EOC
PREFIX="/org/workrave"
def dconf_write rel_path, value
  puts "Setting " + rel_path
  print "old: "; system "dconf read #{PREFIX}/#{rel_path}"
  cmd = "dconf write #{PREFIX}/#{rel_path} #{value}"
  #puts cmd
  system cmd
  print "new: "; system "dconf read #{PREFIX}/#{rel_path}"
end
new_settings = {
  "micro-pause" => [480,  10],
  "rest-break"  => [3000, 360],
  "daily-limit" => [18000]
}
new_settings.each do |name, values|
  limit, duration = values
  dconf_write "timers/" + name + "/limit", limit
  dconf_write "timers/" + name + "/auto-reset", duration if duration
  dconf_write "gui/breaks/" + name + "/skippable-break", "false"
end
dconf_write "gui/applet/enabled", "false"
dconf_write "gui/main-window/enabled", "false"
EOC

apt_install kteatime

syve_section "Weitere Browser"
 
apt_install chromium-browser
apt_install rekonq


syve_section "Spiele"

apt_install supertux

#syve_section "Lern-Programme installieren"
